services:
  kafka:
    image: bitnami/kafka:3.2.3
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    expose:
      - 9092

  kafka-init:
    image: bitnami/kafka:3.2.3
    command: bash -c 'sleep 5 && kafka-topics.sh --create --topic topic1 --bootstrap-server kafka:9092 &&
            kafka-topics.sh --create --topic topic2 --bootstrap-server kafka:9092 &&
            kafka-topics.sh --create --topic topic3 --bootstrap-server kafka:9092 &&
            kafka-topics.sh --create --topic ack --bootstrap-server kafka:9092'

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-simulator-test
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092

  producer:
    build: .
    command: bash -c 'sleep 10 && python -m simulator.producer --delay 400 /data/sim_file1.xlsx /data/sim_file2.xlsx /data/sim_file3.xlsx'
    environment:
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - kafka
      - kafka-init
    volumes:
      - ./data:/data
    restart: on-failure

  db_consumer:
    build: .
    command: python -m simulator.db_consumer
    environment:
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - kafka
      - kafka-init
    volumes:
      - ./database/features.db:/opt/database/features.db
    restart: on-failure

  ack_consumer:
    build: .
    command: python -m simulator.ack_consumer
    environment:
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - kafka
      - kafka-init
    restart: on-failure
